<h1> The test_threejs Repo Main Page </h1>

<p>
As the name suggests in this repo I am testing out all kinds of things that have to do with the javaScript library known as three.js. So then this repo is more or less just one massive collection of simple quick demos of various features, video projects, crude models, javascript modules and so forth that make use of threejs, and a few select other resources.
</p>

<table>

<tr>

<td>

<h2><a href="/demos">The Demos Section</a></h2>
<p>
The demos section is now treated as a starting point for threejs source code examples, broken down by revision number. It is here that I test out some code with a specific revision of threejs to make sure that an older code example is still working with a newer version of threejs. When doing so I can make any needed changes to older code that might break, while still keeping the older source code examples in there respective revision number folders.
</p>

</td>

<td rowspan="2">
<div id="demo"></div>
</td>

</tr>

<tr>
<td colspan="1">
<h2><a href="/forpost">The For Post Section</a></h2>
<p>
In the for post section I am starting to put together folders of source code that have will be the final source code examples for my blog posts. At the time of this writing many of the source code examples are in the demos section still, but I would like for this new section to be the final place for the examples in my corresponding blog posts on threejs. This is also a place to park readme files, todo lists, and any additional notes, links, and other resources while doing research on a given topic.
</p>
</tr>

</table>





<script src="/js/threejs/0.140.0/three.min.js" ></script>
<script src="/js/threejs/0.140.0/controls/OrbitControls.js" ></script>
<script src="/js/threejs/0.140.0/loaders/ColladaLoader.js" ></script>


<script src="/forpost/threejs-examples-animation-loop-module/js/loop-r1.js"></script>
<script>
loopMod.iFrameLoad({
    el: document.getElementById('nav_headerapp'),
    url_threejs: '/js/threejs/0.140.0/three.min.js',
    url_css: '/css/style-headerapp.css',
    url_loopjs: '/forpost/threejs-examples-animation-loop-module/js/loop-r1.js',
    url_app: '/forpost/threejs-examples-animation-loop-module/r1-1-basic/js/main.js'
});
</script>

<!--
<script>
// ---------- ----------
// DEMO
// ---------- ----------
const loopObj = loopMod.create({
    // fps_update is actual update FPS rate ( lower for less CPU use, but choppy )
    fps_update: 16,
    // fps_movement is the rate at which frames will update by system time
    fps_movement: 30,
    // if FAME_MAX == 300 and fps_movement === 30 then it is a 10 sec loop
    FRAME_MAX: 300,
    // init hook for prefroming actions that will only happen once
    // this is called once the loopObj is ready but has not been 
    // started yet for first time
    init: function(loopObj, scene, camera, renderer){
        // ---------- ----------
        // ADD OBJECTS
        // ---------- ----------
        // light
        const dl = new THREE.DirectionalLight(0xffffff, 1);
        dl.position.set(2, 1, 3);
        scene.add(dl);
        // cube
        const ud = scene.userData;
        const cube = ud.cube = new THREE.Mesh(
                new THREE.BoxGeometry(1, 1, 1),
                new THREE.MeshStandardMaterial({ transparent: true, opacity: 0.5}));
        scene.add(cube);
        // progress bar mesh
        const bar = ud.bar = new THREE.Group();
        bar.add(new THREE.Mesh(
                new THREE.BoxGeometry(0.5, 0.5, 5),
                new THREE.MeshStandardMaterial({ color: 0x00ff00, transparent: true, opacity: 0.5})));
        bar.add(new THREE.Mesh(
                new THREE.BoxGeometry(0.25, 0.25, 5),
                new THREE.MeshStandardMaterial({ color: 0x008888, transparent: true, opacity: 0.25})));
        scene.add(bar);
        bar.position.set(0.75, -1, 0);
        // ---------- ----------
        // SETUP CAMERA, SIZE, AND APPEND CONTAINER TO HTML
        // ---------- ----------
        // setup camera and size
        camera.aspect = 640 / 171;
        camera.updateProjectionMatrix();
        loopObj.setSize(640, 171);
        camera.position.set(2, 2, 0);
        camera.lookAt(0, -0.5, 0);
        ( document.getElementById('nav_headerapp') || document.body ).appendChild( loopObj.container )
    },
    // what needs to happen each time the loop starts
    onStart: function(loopObj, scene, camera, renderer){
        loopObj.frame = 0;
    },
    // update method
    update: function(loop, scene, camera){
        const ud = scene.userData;
        const cube = ud.cube;
        const bar = ud.bar;
        cube.rotation.x = Math.PI * 2 * loop.getBias(2);
        cube.rotation.y = Math.PI * 2 * loop.getAlpha(1);
        let alpha = loop.getAlpha(1);
        bar.children[0].scale.set(1, 1, alpha);
        bar.children[0].position.z = (5 / 2) * (1 - alpha);
    }
});
// do just once
loopMod.start(loopObj);
 
</script>
-->


<script src="/forpost/threejs-scene/s3-3-bg-cube-texture/js/main.js"></script>


<!--
<script src="/forpost/threejs-examples-weird-face-1/r0/js/dae-tools-r2.js"></script>
<script src="/forpost/threejs-examples-weird-face-1/r0/js/lerp-geo.js"></script>
<script src="/forpost/threejs-examples-weird-face-1/r0/js/werid-face.js"></script>
<script src="/forpost/threejs-examples-weird-face-1/r0/js/main.js"></script>
-->


<!--
<script src="/forpost/threejs-examples-hamster-wheel/s2-ground-textures/js/utils.js"></script>
<script src="/forpost/threejs-examples-hamster-wheel/s2-ground-textures/js/guy.js"></script>
<script src="/forpost/threejs-examples-hamster-wheel/s2-ground-textures/js/hamster_wheel.js"></script>
<script src="/forpost/threejs-examples-hamster-wheel/s2-ground-textures/js/main.js"></script>
-->

<!--
<script src="/js/modules_group/tree/0.0.0/tree.js"></script>
<script src="/forpost/threejs-examples-tree/s3_loop/js/main.js"></script>
-->

<!--
<script src="/demos/r127/examples-biplane/js/biplane.js"></script>
<script src="/demos/r127/examples-biplane/js/main.js"></script>
-->
